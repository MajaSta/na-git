#include <stdlib.h>
#include "libft.h"

static void ft_freeup(char **strs, int count)
{
    int i;

    i = 0;
    while (i < count)
    {
        free(strs[i]);
        i++;
    }
    free(strs);
}

static int ft_wordcount(char *str, char c)
{
    int i;
    int word;

    i = 0;
    word = 0;
    while (str[i] != '\0')
    {
        if (str[i] != c)
        {
            word++;
            while (str[i] != c && str[i] != '\0')
                i++;
            if (str[i] == '\0')
                return (word);
        }
        i++;
    }
    return (word);
}

static void ft_strcpy(char *dest, char *src, char c)
{
    int i;

    i = 0;
    while (src[i] && src[i] != c)
    {
        dest[i] = src[i];
        i++;
    }
    dest[i] = '\0';
}

static char *ft_stralloc(char *str, char c, int *k)
{
    char *word;
    int len;
    int start;

    while (str[*k] == c)
        (*k)++;
    start = *k;
    len = 0;
    while (str[*k] && str[*k] != c)
    {
        (*k)++;
        len++;
    }
    word = (char *)malloc(sizeof(char) * (len + 1));
    if (!word)
        return (NULL);
    ft_strcpy(word, str + start, c);
    return (word);
}

char **ft_split(char const *str, char c)
{
    char **strs;
    int word_count;
    int i;
    int pos;

    if (!str)
        return (NULL);
    word_count = ft_wordcount((char *)str, c);
    strs = (char **)malloc(sizeof(char *) * (word_count + 1));
    if (!strs)
        return (NULL);
    pos = 0;
    i = 0;
    while (i < word_count)
    {
        strs[i] = ft_stralloc((char *)str, c, &pos);
        if (!strs[i])
        {
            ft_freeup(strs, i);
            return (NULL);
        }
        i++;
    }
    strs[i] = NULL;
    return (strs);
}
